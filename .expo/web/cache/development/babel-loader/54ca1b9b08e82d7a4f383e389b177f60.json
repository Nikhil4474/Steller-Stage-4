{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\Nikhil\\\\Downloads\\\\Steller Stage 4\\\\screens\\\\StarMap.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { WebView } from \"react-native-web/dist/index\";\n\nvar SpaceCraftScreen = function (_Component) {\n  _inherits(SpaceCraftScreen, _Component);\n\n  var _super = _createSuper(SpaceCraftScreen);\n\n  function SpaceCraftScreen() {\n    _classCallCheck(this, SpaceCraftScreen);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(SpaceCraftScreen, [{\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      var _this$state = this.state,\n          longitude = _this$state.longitude,\n          latitude = _this$state.latitude;\n      var path = \"https://virtualsky.lco.global/embed/index.html?longitude=\" + longitude + \"&latitude=\" + latitude + \"&constellations=true&constellationlabels=true&showstarlabels=true&gridlines_az=true&live=true\";\n      return React.createElement(View, {\n        style: {\n          flex: 1,\n          justifyContent: 'center',\n          alignItems: 'center'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 7\n        }\n      }, React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 9\n        }\n      }, \"Star Map Screen!\"), React.createElement(TextInput, {\n        style: {\n          height: 40,\n          borderColor: 'gray',\n          borderWidth: 1\n        },\n        placeholder: \"Enter your latitude\",\n        placeholderTextColor: \"ffff#000000\",\n        onChangeText: function onChangeText(text) {\n          _this.setState({\n            latitude: text\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 9\n        }\n      }));\n    }\n  }]);\n\n  return SpaceCraftScreen;\n}(Component);\n\nexport { SpaceCraftScreen as default };","map":{"version":3,"names":["React","Component","WebView","SpaceCraftScreen","state","longitude","latitude","path","flex","justifyContent","alignItems","height","borderColor","borderWidth","text","setState"],"sources":["C:/Users/Nikhil/Downloads/Steller Stage 4/screens/StarMap.js"],"sourcesContent":["import React, { Component } from 'react';\nimport { Text, View, WebView } from 'react-native';\n\nexport default class SpaceCraftScreen extends Component {\n  render() {\n            const { longitude, latitude } = this.state;\n            const path = `https://virtualsky.lco.global/embed/index.html?longitude=${longitude}&latitude=${latitude}&constellations=true&constellationlabels=true&showstarlabels=true&gridlines_az=true&live=true`;\n\n\n            \n    return (\n\n      <View\n        style={{flex: 1,justifyContent: 'center',alignItems: 'center',}}>\n        <Text>Star Map Screen!</Text>\n\n\n        <TextInput\n            style={{height: 40, borderColor: 'gray', borderWidth:1}}\n            placeholder = \"Enter your latitude\"\n            placeholderTextColor=\"ffff#000000\"\n            onChangeText={(text)=>{\n                this.setState({\n                    latitude:text\n                })\n            }}\n        />\n\n\n      </View>\n    );\n  }\n}\n"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;SACqBC,O;;IAEAC,gB;;;;;;;;;;;;;WACnB,kBAAS;MAAA;;MACC,kBAAgC,KAAKC,KAArC;MAAA,IAAQC,SAAR,eAAQA,SAAR;MAAA,IAAmBC,QAAnB,eAAmBA,QAAnB;MACA,IAAMC,IAAI,iEAA+DF,SAA/D,kBAAqFC,QAArF,kGAAV;MAIR,OAEE,oBAAC,IAAD;QACE,KAAK,EAAE;UAACE,IAAI,EAAE,CAAP;UAASC,cAAc,EAAE,QAAzB;UAAkCC,UAAU,EAAE;QAA9C,CADT;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,GAEE,oBAAC,IAAD;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,sBAFF,EAKE,oBAAC,SAAD;QACI,KAAK,EAAE;UAACC,MAAM,EAAE,EAAT;UAAaC,WAAW,EAAE,MAA1B;UAAkCC,WAAW,EAAC;QAA9C,CADX;QAEI,WAAW,EAAG,qBAFlB;QAGI,oBAAoB,EAAC,aAHzB;QAII,YAAY,EAAE,sBAACC,IAAD,EAAQ;UAClB,KAAI,CAACC,QAAL,CAAc;YACVT,QAAQ,EAACQ;UADC,CAAd;QAGH,CARL;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,EALF,CAFF;IAqBD;;;;EA5B2Cb,S;;SAAzBE,gB"},"metadata":{},"sourceType":"module"}